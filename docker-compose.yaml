version:

services:
  db:
    image: postgres
    env_file:
      - .env
    expose:
      - "5432"
    volumes:
      - pg_data:/var/lib/postgresql/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER" ]
      interval: 10s
      retries: 5
      timeout: 5s

  app:
    build: .
    tty: true
    ports:
      - "8000:8000"
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app

volumes:
  pg_data:

  #Так как селари я еще не успел пройти, я накидал пример по шаблону и так же добавил пример по редису

  #redis:
  #  image: redis
  #  ports:
  #    - '63790:6379'

  #celery:
  #  build: .
  #  tty: true
  #  command: celery -A config worker -l INFO
  #  depends_on:
  #    - redis
  #    - app

  #celery_beat:
  #  build: .
  #  restart: always
  #  tty: true
  #  command: celery -A config beat -l INFO -S django
  #  depends_on:
  #    - redis
  #    - app